{"ast":null,"code":"// import React, { useState, } from 'react';\n// import axios from 'axios';\n\n// const Summary = ({ videoUrl }) => {\n//   const [summary, setSummary] = useState('');\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSummarize = async () => {\n//     if (!videoUrl) {\n//       setError('No video URL provided. Please upload a video first.');\n//       return;\n//     }\n\n//     setLoading(true);\n//     setError(''); // Reset error before fetching summary\n//     try {\n//       const response = await axios.post('/api/summarize', { videoUrl });\n//       setSummary(response.data.summary || 'No summary available.');\n//     } catch (error) {\n//       console.error('Error fetching summary:', error);\n//       setError('Error fetching summary. Please try again later.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"summary\">\n//       <h2>Video Summary</h2>\n//       {videoUrl ? (\n//         <>\n//           <button onClick={handleSummarize} disabled={loading}>\n//             {loading ? 'Loading...' : 'Get Summary'}\n//           </button>\n//           {summary && (\n//             <div>\n//               <h3>Summary:</h3>\n//               <p>{summary}</p>\n//             </div>\n//           )}\n//           {error && (\n//             <div className=\"text-red-500\">{error}</div>\n//           )}\n//         </>\n//       ) : (\n//         <p>No video uploaded yet. Please upload a video first.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Summary;","map":{"version":3,"names":[],"sources":["D:/Project/Mini-Project/frontend/src/Summary.js"],"sourcesContent":["// import React, { useState, } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Summary = ({ videoUrl }) => {\r\n//   const [summary, setSummary] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const handleSummarize = async () => {\r\n//     if (!videoUrl) {\r\n//       setError('No video URL provided. Please upload a video first.');\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     setError(''); // Reset error before fetching summary\r\n//     try {\r\n//       const response = await axios.post('/api/summarize', { videoUrl });\r\n//       setSummary(response.data.summary || 'No summary available.');\r\n//     } catch (error) {\r\n//       console.error('Error fetching summary:', error);\r\n//       setError('Error fetching summary. Please try again later.');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"summary\">\r\n//       <h2>Video Summary</h2>\r\n//       {videoUrl ? (\r\n//         <>\r\n//           <button onClick={handleSummarize} disabled={loading}>\r\n//             {loading ? 'Loading...' : 'Get Summary'}\r\n//           </button>\r\n//           {summary && (\r\n//             <div>\r\n//               <h3>Summary:</h3>\r\n//               <p>{summary}</p>\r\n//             </div>\r\n//           )}\r\n//           {error && (\r\n//             <div className=\"text-red-500\">{error}</div>\r\n//           )}\r\n//         </>\r\n//       ) : (\r\n//         <p>No video uploaded yet. Please upload a video first.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Summary;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}