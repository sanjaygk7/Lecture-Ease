{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkama\\\\OneDrive\\\\Desktop\\\\FSD\\\\Mini-Project\\\\frontend\\\\src\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { FFmpeg } from \"@ffmpeg/ffmpeg\";\nimport { Link } from \"react-router-dom\";\nimport { fetchFile, toBlobURL } from \"@ffmpeg/util\";\nimport \"./FileUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_FILE_SIZE = 100 * 1024 * 1024; // 100MB\nconst ALLOWED_VIDEO_TYPES = [\"video/mp4\", \"video/webm\", \"video/ogg\"];\nconst FileUpload = () => {\n  _s();\n  const [ffmpeg] = useState(() => new FFmpeg());\n  const [file, setFile] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [ffmpegLoaded, setFfmpegLoaded] = useState(false);\n  const [conversionProgress, setConversionProgress] = useState(0);\n  const [showChatbot, setShowChatbot] = useState(false);\n  const [chatMessage, setChatMessage] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [processingStatus, setProcessingStatus] = useState(\"\");\n\n  // Load FFmpeg WebAssembly library\n  useEffect(() => {\n    const loadFFmpeg = async () => {\n      try {\n        await ffmpeg.load({\n          coreURL: await toBlobURL(\"https://unpkg.com/@ffmpeg/core@0.12.4/dist/umd/ffmpeg-core.js\", \"text/javascript\"),\n          wasmURL: await toBlobURL(\"https://unpkg.com/@ffmpeg/core@0.12.4/dist/umd/ffmpeg-core.wasm\", \"application/wasm\")\n        });\n        setFfmpegLoaded(true);\n      } catch (error) {\n        console.error(\"Error loading FFmpeg:\", error);\n        setErrorMessage(\"Error loading audio processor. Please try again.\");\n      }\n    };\n    loadFFmpeg();\n  }, [ffmpeg]);\n  useEffect(() => {\n    return () => {\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    };\n  }, [audioUrl]);\n  const validateFile = useCallback(file => {\n    if (!file) {\n      throw new Error(\"Please select a file to upload.\");\n    }\n    if (!ALLOWED_VIDEO_TYPES.includes(file.type)) {\n      throw new Error(\"Please select a valid video file (MP4, WebM, or OGG).\");\n    }\n    if (file.size > MAX_FILE_SIZE) {\n      throw new Error(\"File size exceeds 100MB limit.\");\n    }\n  }, []);\n  const handleFileChange = useCallback(event => {\n    const selectedFile = event.target.files[0];\n    try {\n      validateFile(selectedFile);\n      setFile(selectedFile);\n      setErrorMessage(\"\");\n      setAudioUrl(null);\n      setShowSuccess(false);\n      setConversionProgress(0);\n      setShowChatbot(false);\n      setChatHistory([]);\n    } catch (error) {\n      setErrorMessage(error.message);\n      setFile(null);\n    }\n  }, [validateFile]);\n  const handleChatSubmit = async e => {\n    e.preventDefault();\n    if (!chatMessage.trim()) return;\n    const userMessage = chatMessage.trim();\n    setChatHistory(prev => [...prev, {\n      role: \"user\",\n      content: userMessage\n    }]);\n    setChatMessage(\"\");\n    try {\n      var _data$choices, _data$choices$;\n      const response = await fetch(\"https://api.gemini.ai/v1/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `AIzaSyAUeqUKUQnQ5rQ-OY4FMh6iR4Q0VaogZag` // Replace with your API key\n        },\n        body: JSON.stringify({\n          prompt: userMessage,\n          model: \"gpt-4\",\n          // Specify model or other parameters if required\n          max_tokens: 150 // Adjust based on your needs\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch response from Gemini.\");\n      }\n      const data = await response.json();\n      const botReply = ((_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : _data$choices$.text) || \"No response received from Gemini.\";\n      setChatHistory(prev => [...prev, {\n        role: \"bot\",\n        content: botReply\n      }]);\n    } catch (error) {\n      console.error(\"Error in Gemini API:\", error);\n      setChatHistory(prev => [...prev, {\n        role: \"bot\",\n        content: \"Sorry, I encountered an error while connecting to Gemini.\"\n      }]);\n    }\n  };\n  const extractAudio = async videoFile => {\n    try {\n      await ffmpeg.writeFile(\"input.mp4\", await fetchFile(videoFile));\n      ffmpeg.on(\"progress\", ({\n        progress\n      }) => {\n        setConversionProgress(Math.round(progress * 100));\n      });\n      await ffmpeg.exec([\"-i\", \"input.mp4\", \"-vn\", \"-acodec\", \"libmp3lame\", \"-ab\", \"128k\", \"-ar\", \"44100\", \"-y\", \"output.mp3\"]);\n      const data = await ffmpeg.readFile(\"output.mp3\");\n      const audioBlob = new Blob([data.buffer], {\n        type: \"audio/mpeg\"\n      });\n      await ffmpeg.deleteFile(\"input.mp4\");\n      await ffmpeg.deleteFile(\"output.mp3\");\n      return audioBlob;\n    } catch (error) {\n      throw new Error(`Failed to extract audio: ${error.message}`);\n    }\n  };\n  const handleUpload = async () => {\n    try {\n      if (!file) throw new Error(\"Please select a file to upload.\");\n      if (!ffmpegLoaded) throw new Error(\"Audio processor is not ready. Please wait.\");\n      setUploading(true);\n      setErrorMessage(\"\");\n      setProcessingStatus(\"Extracting audio...\");\n      const audioBlob = await extractAudio(file);\n      const url = URL.createObjectURL(audioBlob);\n      setAudioUrl(url);\n      setShowSuccess(true);\n\n      // Automatically enable chatbot for demonstration purposes\n      setShowChatbot(true);\n    } catch (error) {\n      setErrorMessage(error.message);\n    } finally {\n      setUploading(false);\n      setConversionProgress(0);\n      setProcessingStatus(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lectureEase\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl font-bold mb-4\",\n            children: \"LectureEase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"bg-white text-blue-500 font-bold py-2 px-4 rounded\",\n          children: \"Signout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headd\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload Your Lecture Video Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          accept: ALLOWED_VIDEO_TYPES.join(\",\"),\n          className: \"file-input\",\n          disabled: uploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          disabled: !file || uploading || !ffmpegLoaded,\n          className: \"choosefile\",\n          children: uploading ? \"Processing...\" : \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), processingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message\",\n        children: processingStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), conversionProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${conversionProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"progress-text\",\n          children: [conversionProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), showSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: \"Video successfully uploaded!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 26\n      }, this), showChatbot && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-container mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbox-messages\",\n          children: chatHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.role}`,\n            children: message.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleChatSubmit,\n          className: \"chatbox-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: chatMessage,\n            onChange: e => setChatMessage(e.target.value),\n            placeholder: \"Ask a question about your lecture...\",\n            className: \"flex-grow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"skjeKeuReoToc1IQ79aVHx+ZVdI=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","FFmpeg","Link","fetchFile","toBlobURL","jsxDEV","_jsxDEV","MAX_FILE_SIZE","ALLOWED_VIDEO_TYPES","FileUpload","_s","ffmpeg","file","setFile","audioUrl","setAudioUrl","uploading","setUploading","errorMessage","setErrorMessage","showSuccess","setShowSuccess","ffmpegLoaded","setFfmpegLoaded","conversionProgress","setConversionProgress","showChatbot","setShowChatbot","chatMessage","setChatMessage","chatHistory","setChatHistory","processingStatus","setProcessingStatus","loadFFmpeg","load","coreURL","wasmURL","error","console","URL","revokeObjectURL","validateFile","Error","includes","type","size","handleFileChange","event","selectedFile","target","files","message","handleChatSubmit","e","preventDefault","trim","userMessage","prev","role","content","_data$choices","_data$choices$","response","fetch","method","headers","Authorization","body","JSON","stringify","prompt","model","max_tokens","ok","data","json","botReply","choices","text","extractAudio","videoFile","writeFile","on","progress","Math","round","exec","readFile","audioBlob","Blob","buffer","deleteFile","handleUpload","url","createObjectURL","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onChange","accept","join","disabled","onClick","style","width","map","index","onSubmit","value","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/rkama/OneDrive/Desktop/FSD/Mini-Project/frontend/src/FileUpload.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { FFmpeg } from \"@ffmpeg/ffmpeg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchFile, toBlobURL } from \"@ffmpeg/util\";\r\nimport \"./FileUpload.css\";\r\n\r\nconst MAX_FILE_SIZE = 100 * 1024 * 1024; // 100MB\r\nconst ALLOWED_VIDEO_TYPES = [\"video/mp4\", \"video/webm\", \"video/ogg\"];\r\n\r\nconst FileUpload = () => {\r\n  const [ffmpeg] = useState(() => new FFmpeg());\r\n  const [file, setFile] = useState(null);\r\n  const [audioUrl, setAudioUrl] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [ffmpegLoaded, setFfmpegLoaded] = useState(false);\r\n  const [conversionProgress, setConversionProgress] = useState(0);\r\n  const [showChatbot, setShowChatbot] = useState(false);\r\n  const [chatMessage, setChatMessage] = useState(\"\");\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [processingStatus, setProcessingStatus] = useState(\"\");\r\n\r\n  // Load FFmpeg WebAssembly library\r\n  useEffect(() => {\r\n    const loadFFmpeg = async () => {\r\n      try {\r\n        await ffmpeg.load({\r\n          coreURL: await toBlobURL(\r\n            \"https://unpkg.com/@ffmpeg/core@0.12.4/dist/umd/ffmpeg-core.js\",\r\n            \"text/javascript\"\r\n          ),\r\n          wasmURL: await toBlobURL(\r\n            \"https://unpkg.com/@ffmpeg/core@0.12.4/dist/umd/ffmpeg-core.wasm\",\r\n            \"application/wasm\"\r\n          ),\r\n        });\r\n        setFfmpegLoaded(true);\r\n      } catch (error) {\r\n        console.error(\"Error loading FFmpeg:\", error);\r\n        setErrorMessage(\"Error loading audio processor. Please try again.\");\r\n      }\r\n    };\r\n    loadFFmpeg();\r\n  }, [ffmpeg]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (audioUrl) {\r\n        URL.revokeObjectURL(audioUrl);\r\n      }\r\n    };\r\n  }, [audioUrl]);\r\n\r\n  const validateFile = useCallback((file) => {\r\n    if (!file) {\r\n      throw new Error(\"Please select a file to upload.\");\r\n    }\r\n\r\n    if (!ALLOWED_VIDEO_TYPES.includes(file.type)) {\r\n      throw new Error(\"Please select a valid video file (MP4, WebM, or OGG).\");\r\n    }\r\n\r\n    if (file.size > MAX_FILE_SIZE) {\r\n      throw new Error(\"File size exceeds 100MB limit.\");\r\n    }\r\n  }, []);\r\n\r\n  const handleFileChange = useCallback(\r\n    (event) => {\r\n      const selectedFile = event.target.files[0];\r\n      try {\r\n        validateFile(selectedFile);\r\n        setFile(selectedFile);\r\n        setErrorMessage(\"\");\r\n        setAudioUrl(null);\r\n        setShowSuccess(false);\r\n        setConversionProgress(0);\r\n        setShowChatbot(false);\r\n        setChatHistory([]);\r\n      } catch (error) {\r\n        setErrorMessage(error.message);\r\n        setFile(null);\r\n      }\r\n    },\r\n    [validateFile]\r\n  );\r\n\r\n  const handleChatSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!chatMessage.trim()) return;\r\n    const userMessage = chatMessage.trim();\r\n    setChatHistory((prev) => [...prev, { role: \"user\", content: userMessage }]);\r\n    setChatMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"https://api.gemini.ai/v1/chat\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `AIzaSyAUeqUKUQnQ5rQ-OY4FMh6iR4Q0VaogZag`, // Replace with your API key\r\n        },\r\n        body: JSON.stringify({\r\n          prompt: userMessage,\r\n          model: \"gpt-4\", // Specify model or other parameters if required\r\n          max_tokens: 150, // Adjust based on your needs\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch response from Gemini.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      const botReply =\r\n        data.choices?.[0]?.text || \"No response received from Gemini.\";\r\n\r\n      setChatHistory((prev) => [...prev, { role: \"bot\", content: botReply }]);\r\n    } catch (error) {\r\n      console.error(\"Error in Gemini API:\", error);\r\n      setChatHistory((prev) => [\r\n        ...prev,\r\n        {\r\n          role: \"bot\",\r\n          content: \"Sorry, I encountered an error while connecting to Gemini.\",\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const extractAudio = async (videoFile) => {\r\n    try {\r\n      await ffmpeg.writeFile(\"input.mp4\", await fetchFile(videoFile));\r\n      ffmpeg.on(\"progress\", ({ progress }) => {\r\n        setConversionProgress(Math.round(progress * 100));\r\n      });\r\n\r\n      await ffmpeg.exec([\r\n        \"-i\",\r\n        \"input.mp4\",\r\n        \"-vn\",\r\n        \"-acodec\",\r\n        \"libmp3lame\",\r\n        \"-ab\",\r\n        \"128k\",\r\n        \"-ar\",\r\n        \"44100\",\r\n        \"-y\",\r\n        \"output.mp3\",\r\n      ]);\r\n\r\n      const data = await ffmpeg.readFile(\"output.mp3\");\r\n      const audioBlob = new Blob([data.buffer], { type: \"audio/mpeg\" });\r\n      await ffmpeg.deleteFile(\"input.mp4\");\r\n      await ffmpeg.deleteFile(\"output.mp3\");\r\n      return audioBlob;\r\n    } catch (error) {\r\n      throw new Error(`Failed to extract audio: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    try {\r\n      if (!file) throw new Error(\"Please select a file to upload.\");\r\n      if (!ffmpegLoaded)\r\n        throw new Error(\"Audio processor is not ready. Please wait.\");\r\n\r\n      setUploading(true);\r\n      setErrorMessage(\"\");\r\n\r\n      setProcessingStatus(\"Extracting audio...\");\r\n      const audioBlob = await extractAudio(file);\r\n\r\n      const url = URL.createObjectURL(audioBlob);\r\n      setAudioUrl(url);\r\n      setShowSuccess(true);\r\n\r\n      // Automatically enable chatbot for demonstration purposes\r\n      setShowChatbot(true);\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      setUploading(false);\r\n      setConversionProgress(0);\r\n      setProcessingStatus(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"container\">\r\n        <div className=\"lectureEase\">\r\n          <Link to=\"/\">\r\n            <h1 className=\"text-4xl font-bold mb-4\">LectureEase</h1>\r\n          </Link>\r\n        </div>\r\n        <div className=\"login\">\r\n          <Link\r\n            to=\"/\"\r\n            className=\"bg-white text-blue-500 font-bold py-2 px-4 rounded\"\r\n          >\r\n            Signout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"file-upload\">\r\n        <div className=\"headd\">\r\n          <span>Upload Your Lecture Video Here</span>\r\n        </div>\r\n        <div className=\"upload-container\">\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleFileChange}\r\n            accept={ALLOWED_VIDEO_TYPES.join(\",\")}\r\n            className=\"file-input\"\r\n            disabled={uploading}\r\n          />\r\n          <button\r\n            onClick={handleUpload}\r\n            disabled={!file || uploading || !ffmpegLoaded}\r\n            className=\"choosefile\"\r\n          >\r\n            {uploading ? \"Processing...\" : \"Upload\"}\r\n          </button>\r\n        </div>\r\n\r\n        {processingStatus && (\r\n          <div className=\"status-message\">{processingStatus}</div>\r\n        )}\r\n\r\n        {conversionProgress > 0 && (\r\n          <div className=\"progress-container\">\r\n            <div className=\"progress-bar\">\r\n              <div\r\n                className=\"progress-fill\"\r\n                style={{ width: `${conversionProgress}%` }}\r\n              />\r\n            </div>\r\n            <p className=\"progress-text\">{conversionProgress}%</p>\r\n          </div>\r\n        )}\r\n\r\n        {showSuccess && (\r\n          <div className=\"success-message\">Video successfully uploaded!</div>\r\n        )}\r\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n        {showChatbot && (\r\n          <div className=\"chatbot-container mt-6\">\r\n            <div className=\"chatbox-messages\">\r\n              {chatHistory.map((message, index) => (\r\n                <div key={index} className={`message ${message.role}`}>\r\n                  {message.content}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <form onSubmit={handleChatSubmit} className=\"chatbox-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={chatMessage}\r\n                onChange={(e) => setChatMessage(e.target.value)}\r\n                placeholder=\"Ask a question about your lecture...\"\r\n                className=\"flex-grow\"\r\n              />\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,SAAS,QAAQ,cAAc;AACnD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;AACzC,MAAMC,mBAAmB,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,CAAC;AAEpE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,CAAC,GAAGb,QAAQ,CAAC,MAAM,IAAIG,MAAM,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC0B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMmC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMvB,MAAM,CAACwB,IAAI,CAAC;UAChBC,OAAO,EAAE,MAAMhC,SAAS,CACtB,+DAA+D,EAC/D,iBACF,CAAC;UACDiC,OAAO,EAAE,MAAMjC,SAAS,CACtB,iEAAiE,EACjE,kBACF;QACF,CAAC,CAAC;QACFmB,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CnB,eAAe,CAAC,kDAAkD,CAAC;MACrE;IACF,CAAC;IACDe,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACvB,MAAM,CAAC,CAAC;EAEZZ,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIe,QAAQ,EAAE;QACZ0B,GAAG,CAACC,eAAe,CAAC3B,QAAQ,CAAC;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAM4B,YAAY,GAAG1C,WAAW,CAAEY,IAAI,IAAK;IACzC,IAAI,CAACA,IAAI,EAAE;MACT,MAAM,IAAI+B,KAAK,CAAC,iCAAiC,CAAC;IACpD;IAEA,IAAI,CAACnC,mBAAmB,CAACoC,QAAQ,CAAChC,IAAI,CAACiC,IAAI,CAAC,EAAE;MAC5C,MAAM,IAAIF,KAAK,CAAC,uDAAuD,CAAC;IAC1E;IAEA,IAAI/B,IAAI,CAACkC,IAAI,GAAGvC,aAAa,EAAE;MAC7B,MAAM,IAAIoC,KAAK,CAAC,gCAAgC,CAAC;IACnD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,gBAAgB,GAAG/C,WAAW,CACjCgD,KAAK,IAAK;IACT,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1C,IAAI;MACFT,YAAY,CAACO,YAAY,CAAC;MAC1BpC,OAAO,CAACoC,YAAY,CAAC;MACrB9B,eAAe,CAAC,EAAE,CAAC;MACnBJ,WAAW,CAAC,IAAI,CAAC;MACjBM,cAAc,CAAC,KAAK,CAAC;MACrBI,qBAAqB,CAAC,CAAC,CAAC;MACxBE,cAAc,CAAC,KAAK,CAAC;MACrBI,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdnB,eAAe,CAACmB,KAAK,CAACc,OAAO,CAAC;MAC9BvC,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC,EACD,CAAC6B,YAAY,CACf,CAAC;EAED,MAAMW,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC3B,WAAW,CAAC4B,IAAI,CAAC,CAAC,EAAE;IACzB,MAAMC,WAAW,GAAG7B,WAAW,CAAC4B,IAAI,CAAC,CAAC;IACtCzB,cAAc,CAAE2B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEH;IAAY,CAAC,CAAC,CAAC;IAC3E5B,cAAc,CAAC,EAAE,CAAC;IAElB,IAAI;MAAA,IAAAgC,aAAA,EAAAC,cAAA;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,yCAAyC,CAAE;QAC5D,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM,EAAEd,WAAW;UACnBe,KAAK,EAAE,OAAO;UAAE;UAChBC,UAAU,EAAE,GAAG,CAAE;QACnB,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QAChB,MAAM,IAAI/B,KAAK,CAAC,uCAAuC,CAAC;MAC1D;MAEA,MAAMgC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClC,MAAMC,QAAQ,GACZ,EAAAhB,aAAA,GAAAc,IAAI,CAACG,OAAO,cAAAjB,aAAA,wBAAAC,cAAA,GAAZD,aAAA,CAAe,CAAC,CAAC,cAAAC,cAAA,uBAAjBA,cAAA,CAAmBiB,IAAI,KAAI,mCAAmC;MAEhEhD,cAAc,CAAE2B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAE,KAAK;QAAEC,OAAO,EAAEiB;MAAS,CAAC,CAAC,CAAC;IACzE,CAAC,CAAC,OAAOvC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CP,cAAc,CAAE2B,IAAI,IAAK,CACvB,GAAGA,IAAI,EACP;QACEC,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE;MACX,CAAC,CACF,CAAC;IACJ;EACF,CAAC;EAED,MAAMoB,YAAY,GAAG,MAAOC,SAAS,IAAK;IACxC,IAAI;MACF,MAAMtE,MAAM,CAACuE,SAAS,CAAC,WAAW,EAAE,MAAM/E,SAAS,CAAC8E,SAAS,CAAC,CAAC;MAC/DtE,MAAM,CAACwE,EAAE,CAAC,UAAU,EAAE,CAAC;QAAEC;MAAS,CAAC,KAAK;QACtC3D,qBAAqB,CAAC4D,IAAI,CAACC,KAAK,CAACF,QAAQ,GAAG,GAAG,CAAC,CAAC;MACnD,CAAC,CAAC;MAEF,MAAMzE,MAAM,CAAC4E,IAAI,CAAC,CAChB,IAAI,EACJ,WAAW,EACX,KAAK,EACL,SAAS,EACT,YAAY,EACZ,KAAK,EACL,MAAM,EACN,KAAK,EACL,OAAO,EACP,IAAI,EACJ,YAAY,CACb,CAAC;MAEF,MAAMZ,IAAI,GAAG,MAAMhE,MAAM,CAAC6E,QAAQ,CAAC,YAAY,CAAC;MAChD,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACf,IAAI,CAACgB,MAAM,CAAC,EAAE;QAAE9C,IAAI,EAAE;MAAa,CAAC,CAAC;MACjE,MAAMlC,MAAM,CAACiF,UAAU,CAAC,WAAW,CAAC;MACpC,MAAMjF,MAAM,CAACiF,UAAU,CAAC,YAAY,CAAC;MACrC,OAAOH,SAAS;IAClB,CAAC,CAAC,OAAOnD,KAAK,EAAE;MACd,MAAM,IAAIK,KAAK,CAAC,4BAA4BL,KAAK,CAACc,OAAO,EAAE,CAAC;IAC9D;EACF,CAAC;EAED,MAAMyC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,IAAI,CAACjF,IAAI,EAAE,MAAM,IAAI+B,KAAK,CAAC,iCAAiC,CAAC;MAC7D,IAAI,CAACrB,YAAY,EACf,MAAM,IAAIqB,KAAK,CAAC,4CAA4C,CAAC;MAE/D1B,YAAY,CAAC,IAAI,CAAC;MAClBE,eAAe,CAAC,EAAE,CAAC;MAEnBc,mBAAmB,CAAC,qBAAqB,CAAC;MAC1C,MAAMwD,SAAS,GAAG,MAAMT,YAAY,CAACpE,IAAI,CAAC;MAE1C,MAAMkF,GAAG,GAAGtD,GAAG,CAACuD,eAAe,CAACN,SAAS,CAAC;MAC1C1E,WAAW,CAAC+E,GAAG,CAAC;MAChBzE,cAAc,CAAC,IAAI,CAAC;;MAEpB;MACAM,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdnB,eAAe,CAACmB,KAAK,CAACc,OAAO,CAAC;IAChC,CAAC,SAAS;MACRnC,YAAY,CAAC,KAAK,CAAC;MACnBQ,qBAAqB,CAAC,CAAC,CAAC;MACxBQ,mBAAmB,CAAC,EAAE,CAAC;IACzB;EACF,CAAC;EAED,oBACE3B,OAAA;IAAK0F,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB3F,OAAA;MAAK0F,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB3F,OAAA;QAAK0F,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1B3F,OAAA,CAACJ,IAAI;UAACgG,EAAE,EAAC,GAAG;UAAAD,QAAA,eACV3F,OAAA;YAAI0F,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNhG,OAAA;QAAK0F,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpB3F,OAAA,CAACJ,IAAI;UACHgG,EAAE,EAAC,GAAG;UACNF,SAAS,EAAC,oDAAoD;UAAAC,QAAA,EAC/D;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENhG,OAAA;MAAK0F,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B3F,OAAA;QAAK0F,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpB3F,OAAA;UAAA2F,QAAA,EAAM;QAA8B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACNhG,OAAA;QAAK0F,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B3F,OAAA;UACEuC,IAAI,EAAC,MAAM;UACX0D,QAAQ,EAAExD,gBAAiB;UAC3ByD,MAAM,EAAEhG,mBAAmB,CAACiG,IAAI,CAAC,GAAG,CAAE;UACtCT,SAAS,EAAC,YAAY;UACtBU,QAAQ,EAAE1F;QAAU;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACFhG,OAAA;UACEqG,OAAO,EAAEd,YAAa;UACtBa,QAAQ,EAAE,CAAC9F,IAAI,IAAII,SAAS,IAAI,CAACM,YAAa;UAC9C0E,SAAS,EAAC,YAAY;UAAAC,QAAA,EAErBjF,SAAS,GAAG,eAAe,GAAG;QAAQ;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELtE,gBAAgB,iBACf1B,OAAA;QAAK0F,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEjE;MAAgB;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACxD,EAEA9E,kBAAkB,GAAG,CAAC,iBACrBlB,OAAA;QAAK0F,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjC3F,OAAA;UAAK0F,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3B3F,OAAA;YACE0F,SAAS,EAAC,eAAe;YACzBY,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAGrF,kBAAkB;YAAI;UAAE;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhG,OAAA;UAAG0F,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAEzE,kBAAkB,EAAC,GAAC;QAAA;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACN,EAEAlF,WAAW,iBACVd,OAAA;QAAK0F,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAA4B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACnE,EACApF,YAAY,iBAAIZ,OAAA;QAAK0F,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAE/E;MAAY;QAAAiF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAEnE5E,WAAW,iBACVpB,OAAA;QAAK0F,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrC3F,OAAA;UAAK0F,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC9BnE,WAAW,CAACgF,GAAG,CAAC,CAAC1D,OAAO,EAAE2D,KAAK,kBAC9BzG,OAAA;YAAiB0F,SAAS,EAAE,WAAW5C,OAAO,CAACO,IAAI,EAAG;YAAAsC,QAAA,EACnD7C,OAAO,CAACQ;UAAO,GADRmD,KAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNhG,OAAA;UAAM0G,QAAQ,EAAE3D,gBAAiB;UAAC2C,SAAS,EAAC,eAAe;UAAAC,QAAA,gBACzD3F,OAAA;YACEuC,IAAI,EAAC,MAAM;YACXoE,KAAK,EAAErF,WAAY;YACnB2E,QAAQ,EAAGjD,CAAC,IAAKzB,cAAc,CAACyB,CAAC,CAACJ,MAAM,CAAC+D,KAAK,CAAE;YAChDC,WAAW,EAAC,sCAAsC;YAClDlB,SAAS,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACFhG,OAAA;YAAQuC,IAAI,EAAC,QAAQ;YAAAoD,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5F,EAAA,CAvQID,UAAU;AAAA0G,EAAA,GAAV1G,UAAU;AAyQhB,eAAeA,UAAU;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}