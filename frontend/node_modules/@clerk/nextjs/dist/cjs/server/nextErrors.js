"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var nextErrors_exports = {};
__export(nextErrors_exports, {
  isNextjsNotFoundError: () => isNextjsNotFoundError,
  isNextjsRedirectError: () => isNextjsRedirectError,
  isRedirectToSignInError: () => isRedirectToSignInError,
  nextjsNotFound: () => nextjsNotFound,
  nextjsRedirectError: () => nextjsRedirectError,
  redirectToSignInError: () => redirectToSignInError
});
module.exports = __toCommonJS(nextErrors_exports);
const CONTROL_FLOW_ERROR = {
  FORCE_NOT_FOUND: "CLERK_PROTECT_REWRITE",
  REDIRECT_TO_URL: "CLERK_PROTECT_REDIRECT_TO_URL",
  REDIRECT_TO_SIGN_IN: "CLERK_PROTECT_REDIRECT_TO_SIGN_IN"
};
const NOT_FOUND_ERROR_CODE = "NEXT_NOT_FOUND";
function isNextjsNotFoundError(error) {
  if (typeof error !== "object" || error === null || !("digest" in error)) {
    return false;
  }
  return error.digest === NOT_FOUND_ERROR_CODE;
}
function nextjsNotFound() {
  const error = new Error(NOT_FOUND_ERROR_CODE);
  error.digest = NOT_FOUND_ERROR_CODE;
  error.clerk_digest = CONTROL_FLOW_ERROR.FORCE_NOT_FOUND;
  throw error;
}
const REDIRECT_ERROR_CODE = "NEXT_REDIRECT";
function nextjsRedirectError(url, extra, type = "replace", statusCode = 307) {
  const error = new Error(REDIRECT_ERROR_CODE);
  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`;
  error.clerk_digest = CONTROL_FLOW_ERROR.REDIRECT_TO_URL;
  Object.assign(error, extra);
  throw error;
}
function redirectToSignInError(url, returnBackUrl) {
  nextjsRedirectError(url, {
    clerk_digest: CONTROL_FLOW_ERROR.REDIRECT_TO_SIGN_IN,
    returnBackUrl: returnBackUrl === null ? "" : returnBackUrl || url
  });
}
function isNextjsRedirectError(error) {
  if (typeof error !== "object" || error === null || !("digest" in error) || typeof error.digest !== "string") {
    return false;
  }
  const digest = error.digest.split(";");
  const [errorCode, type] = digest;
  const destination = digest.slice(2, -2).join(";");
  const status = digest.at(-2);
  const statusCode = Number(status);
  return errorCode === REDIRECT_ERROR_CODE && (type === "replace" || type === "push") && typeof destination === "string" && !isNaN(statusCode) && statusCode === 307;
}
function isRedirectToSignInError(error) {
  if (isNextjsRedirectError(error) && "clerk_digest" in error) {
    return error.clerk_digest === CONTROL_FLOW_ERROR.REDIRECT_TO_SIGN_IN;
  }
  return false;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  isNextjsNotFoundError,
  isNextjsRedirectError,
  isRedirectToSignInError,
  nextjsNotFound,
  nextjsRedirectError,
  redirectToSignInError
});
//# sourceMappingURL=nextErrors.js.map