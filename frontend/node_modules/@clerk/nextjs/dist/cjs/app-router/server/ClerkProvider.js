"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ClerkProvider_exports = {};
__export(ClerkProvider_exports, {
  ClerkProvider: () => ClerkProvider
});
module.exports = __toCommonJS(ClerkProvider_exports);
var import_ezheaders = require("ezheaders");
var import_package = __toESM(require("next/package.json"));
var import_react = __toESM(require("react"));
var import_PromisifiedAuthProvider = require("../../client-boundary/PromisifiedAuthProvider");
var import_buildClerkProps = require("../../server/buildClerkProps");
var import_mergeNextClerkPropsWithEnv = require("../../utils/mergeNextClerkPropsWithEnv");
var import_ClerkProvider = require("../client/ClerkProvider");
var import_utils = require("./utils");
const isNext13 = import_package.default.version.startsWith("13.");
const getDynamicClerkState = import_react.default.cache(async function getDynamicClerkState2() {
  const request = await (0, import_utils.buildRequestLike)();
  const data = (0, import_buildClerkProps.getDynamicAuthData)(request);
  return data;
});
const getNonceFromCSPHeader = import_react.default.cache(async function getNonceFromCSPHeader2() {
  return (0, import_utils.getScriptNonceFromHeader)(await (0, import_ezheaders.header)("Content-Security-Policy") || "") || "";
});
async function ClerkProvider(props) {
  const { children, dynamic, ...rest } = props;
  let statePromise = Promise.resolve(null);
  let nonce = Promise.resolve("");
  if (dynamic) {
    if (isNext13) {
      statePromise = Promise.resolve(await getDynamicClerkState());
      nonce = Promise.resolve(await getNonceFromCSPHeader());
    } else {
      statePromise = getDynamicClerkState();
      nonce = getNonceFromCSPHeader();
    }
  }
  const output = /* @__PURE__ */ import_react.default.createElement(
    import_ClerkProvider.ClientClerkProvider,
    {
      ...(0, import_mergeNextClerkPropsWithEnv.mergeNextClerkPropsWithEnv)(rest),
      nonce: await nonce,
      initialState: await statePromise
    },
    children
  );
  if (dynamic) {
    return (
      // TODO: fix types so AuthObject is compatible with InitialState
      /* @__PURE__ */ import_react.default.createElement(import_PromisifiedAuthProvider.PromisifiedAuthProvider, { authPromise: statePromise }, output)
    );
  }
  return output;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ClerkProvider
});
//# sourceMappingURL=ClerkProvider.js.map