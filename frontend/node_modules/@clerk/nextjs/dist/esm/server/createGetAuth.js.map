{"version":3,"sources":["../../../src/server/createGetAuth.ts"],"sourcesContent":["import type { AuthObject } from '@clerk/backend';\nimport { constants } from '@clerk/backend/internal';\nimport { decodeJwt } from '@clerk/backend/jwt';\nimport { isTruthy } from '@clerk/shared/underscore';\n\nimport { withLogger } from '../utils/debugLogger';\nimport { getAuthDataFromRequest } from './data/getAuthDataFromRequest';\nimport { getAuthAuthHeaderMissing } from './errors';\nimport type { RequestLike } from './types';\nimport { assertAuthStatus, getCookie, getHeader } from './utils';\n\nexport const createGetAuth = ({\n  noAuthStatusMessage,\n  debugLoggerName,\n}: {\n  debugLoggerName: string;\n  noAuthStatusMessage: string;\n}) =>\n  withLogger(debugLoggerName, logger => {\n    return (req: RequestLike, opts?: { secretKey?: string }): AuthObject => {\n      if (isTruthy(getHeader(req, constants.Headers.EnableDebug))) {\n        logger.enable();\n      }\n\n      assertAuthStatus(req, noAuthStatusMessage);\n\n      return getAuthDataFromRequest(req, { ...opts, logger });\n    };\n  });\n\nexport const getAuth = createGetAuth({\n  debugLoggerName: 'getAuth()',\n  noAuthStatusMessage: getAuthAuthHeaderMissing(),\n});\n\nexport const parseJwt = (req: RequestLike) => {\n  const cookieToken = getCookie(req, constants.Cookies.Session);\n  const headerToken = getHeader(req, 'authorization')?.replace('Bearer ', '');\n  return decodeJwt(cookieToken || headerToken || '');\n};\n"],"mappings":"AACA,SAAS,iBAAiB;AAC1B,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AAEzB,SAAS,kBAAkB;AAC3B,SAAS,8BAA8B;AACvC,SAAS,gCAAgC;AAEzC,SAAS,kBAAkB,WAAW,iBAAiB;AAEhD,MAAM,gBAAgB,CAAC;AAAA,EAC5B;AAAA,EACA;AACF,MAIE,WAAW,iBAAiB,YAAU;AACpC,SAAO,CAAC,KAAkB,SAA8C;AACtE,QAAI,SAAS,UAAU,KAAK,UAAU,QAAQ,WAAW,CAAC,GAAG;AAC3D,aAAO,OAAO;AAAA,IAChB;AAEA,qBAAiB,KAAK,mBAAmB;AAEzC,WAAO,uBAAuB,KAAK,EAAE,GAAG,MAAM,OAAO,CAAC;AAAA,EACxD;AACF,CAAC;AAEI,MAAM,UAAU,cAAc;AAAA,EACnC,iBAAiB;AAAA,EACjB,qBAAqB,yBAAyB;AAChD,CAAC;AAEM,MAAM,WAAW,CAAC,QAAqB;AAnC9C;AAoCE,QAAM,cAAc,UAAU,KAAK,UAAU,QAAQ,OAAO;AAC5D,QAAM,eAAc,eAAU,KAAK,eAAe,MAA9B,mBAAiC,QAAQ,WAAW;AACxE,SAAO,UAAU,eAAe,eAAe,EAAE;AACnD;","names":[]}